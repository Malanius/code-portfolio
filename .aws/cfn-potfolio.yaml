# code-porfolio template
AWSTemplateFormatVersion: 2010-09-09

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "DNS settings"
        Parameters:
          - DnsPrefix
          - DomainName
      -
        Label:
          default: "SSL settings"
        Parameters:
          - SslCertificateArn
      -
        Label:
          default: "Repository settings"
        Parameters:
          - GithubRepoUrl
          - GithubOAuthToken
    ParameterLabels:
      DnsPrefix:
        default: URL prefix
      DomainName:
        default: Domain name
      SslCertificateArn:
        default: ACM certificate ARN
      GithubRepoUrl:
        default: GitHub repository URL
      GithubOAuthToken:
        default: GitHub OAuth token

Parameters:
  DnsPrefix:
    Type: String
    Default: code
    Description: Prefix of DNS name for Route 53
  DomainName:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone
    Default: malanius.net
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  SslCertificateArn:
    Type: String
    Default: arn:aws:acm:us-east-1:133561675609:certificate/05e68c3c-9a62-4a03-b043-3a6c2fe49136
    Description: Existing ACM certificate ARN to be used in CloudFront distribution
  GithubRepoUrl: 
    Type: String
    Default: "https://github.com/Malanius/code-portfolio"
    Description: "HTTPS url to GitHub repository with deployed app source codes"
    AllowedPattern: ^https://github.com/[A-z0-9\d](?:[a-z0-9\d]|-(?=[a-z0-9\d])){0,38}/[A-z\-_][A-z\-_\.]+$
    ConstraintDescription: Must be a valid GitHub URL in https://github.com/{user}/{repostirory} format!
  GithubOAuthToken:
    Type: String
    Description: "Github personal access token with 'repo' scope"
    NoEcho: true
  
Resources:
## S3 buckets 
  PipelineBucket: 
    Type: 'AWS::S3::Bucket'
  DeployBucket:
    Type: 'AWS::S3::Bucket'

## Distribution & route
  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - 
            DomainName: !GetAtt DeployBucket.DomainName
            Id: !Ref DeployBucket
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultRootObject: index.html
        Enabled: true
        Aliases:
          - !Sub ${DnsPrefix}.${DomainName}
        ViewerCertificate:
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016
          AcmCertificateArn: !Ref SslCertificateArn
        DefaultCacheBehavior: 
          MinTTL: 86400 # 1 day
          MaxTTL: 31536000 # 1 year
          ForwardedValues: 
            QueryString: true
          TargetOriginId: !Ref DeployBucket
          ViewerProtocolPolicy: "redirect-to-https"

  SiteDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      RecordSets:
      - Name: !Sub ${DnsPrefix}.${DomainName}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2 # Magic id for all CloudFronts
          DNSName: !GetAtt Distribution.DomainName

## CI/CD pipeline with CodePipeline & CodeBuild
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      RestartExecutionOnUpdate: true
      Stages:
        - 
          Name: Source
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts: 
                - 
                  Name: !Sub ${AWS::StackName}-source
              Configuration:
                Owner: !Select
                  - 3
                  - !Split
                    - "/"
                    - !Ref GithubRepoUrl
                Repo: !Select
                  - 4
                  - !Split
                    - "/"
                    - !Ref GithubRepoUrl
                Branch: master
                OAuthToken: !Ref GithubOAuthToken
        - 
          Name: Build
          Actions: 
            - 
              Name: BuildAction
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts: 
                - 
                  Name: !Sub ${AWS::StackName}-source
              OutputArtifacts: 
                - 
                  Name: !Sub ${AWS::StackName}-artifact
              Configuration:
                ProjectName: !Ref CodeBuild
  CodeBuild:
      Type: 'AWS::CodeBuild::Project'
      Properties:
        Name: !Sub ${AWS::StackName}-CodeBuild
        ServiceRole: !GetAtt CodeBuildRole.Arn
        Artifacts:
          Type: CODEPIPELINE
        Source: 
          Type: CODEPIPELINE
        Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Type: LINUX_CONTAINER
          Image: "aws/codebuild/nodejs:8.11.0"
        Source:
          Type: CODEPIPELINE
          BuildSpec: !Sub |
            version: 0.1
            phases:
              pre_build:
                commands:
                  - echo Installing source NPM dependencies...
                  - npm install
              build:
                commands:
                  - echo Build started on `date`
                  - npm run build
              post_build:
                commands:
                  - aws s3 cp --recursive --acl public-read ./build s3://${DeployBucket}/ 
                  - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/service-worker.js s3://${DeployBucket}/
                  - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://${DeployBucket}/
                  - aws cloudfront create-invalidation --distribution-id ${Distribution} --paths /index.html /service-worker.js
            artifacts:
              files:
                - '**/*'
              base-directory: build

## IAM roles
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource: 
                  - !GetAtt DeployBucket.Arn
                  - !Join ['', [!GetAtt DeployBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"
  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - 
                Effect: Allow  
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"

Outputs:
  distributionEndpoint:
    Description: Endpoint URL of CloudFront distribution
    Value: !GetAtt Distribution.DomainName
  siteUrl:
    Description: Endpoint URL of created Route53 record set
    Value: !Sub https://${DnsPrefix}.${DomainName}